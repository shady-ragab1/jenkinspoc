node{

//def mvn = tool (name: 'maven', type: 'maven') + '/bin/mvnVERSIONdd
pom = readMavenPom file: 'pom.xml'
def version = pom.version

  stage('clean up'){
   	cleanWs()
  }

  stage('checkout'){
    git branch: 'master',
	credentialsId: 'githubCredentials',
	url: 'https://github.com/shady-ragab1/jenkinspoc'
  }

  stage('build jar'){

      //sh "${mvn} clean package"
	bat "mvn clean package"
  }

  stage('build image'){

        //sh "${mvn} clean package"
  	bat "mvn spring-boot:build-image"
    }

 stage('push to dockerhub'){

  	withCredentials([usernamePassword(credentialsId: 'dockerhubCredentials', passwordVariable: 'pass', usernameVariable: 'user')]) {
    		bat "docker login --username $user --password $pass"
	}

    //pom = readMavenPom file: 'pom.xml'


    //version= bat ( returnStdout: true, script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout')

    bat "echo ${pom.version}"

	bat "docker push shadyragab/jenkinspoc:${version}"
  }

   stage('run to minikube'){


      deployment = readYaml file: 'deployment_template.yaml'

      deployment.spec.template.spec.containers[0].image = "shadyragab/jenkinspoc:${version}"
      writeYaml file:"deployment.yaml", data: deployment
      
    
    bat "kubectl config set-cluster minikube --server=https://127.0.0.1:32768 --insecure-skip-tls-verify=true"
    bat "kubectl config set-context minikube --cluster=minikube --user=minikube"
    bat "kubectl config use-context minikube" 

       bat "kubectl apply -f deployment.yaml"
       bat "kubectl apply -f service.yaml"


    }





}
